{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAcF,SAASC,cAAc,wBACrCE,EAAaH,SAASC,cAAc,uBACpCG,EAAYJ,SAASC,cAAc,sBAEzC,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IA8BPR,EAAKgB,iBAAiB,UA1BD,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAShB,EAAYiB,MACrBC,EAAQjB,EAAWgB,MACnBE,EAAOjB,EAAUe,MAEvB,IAAKD,GAAU,IAAME,GAAS,IAAMC,GAAQ,EAC1CC,EAAAzB,GAAS0B,OAAOC,QAAS,kDAI3B,IAAK,IAAIC,EAAQ,EAAGA,EAAQP,EAAQO,IAClCpB,EAAcoB,EAAQ,GAAIL,IAASC,EAAOI,GACvCC,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MACjBe,EAAAzB,GAAS0B,OAAOK,QACd,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAGjDuB,OAAM,SAAAH,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MAClBe,EAAAzB,GAAS0B,OAAOC,QACd,sBAAqCK,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst amountInput = document.querySelector('input[name=\"amount\"]');\nconst firstDelay = document.querySelector('input[name=\"delay\"]');\nconst delayStep = document.querySelector('input[name=\"step\"]');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((fulfill, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        fulfill({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst handleSubmit = e => {\n  e.preventDefault();\n  const amount = amountInput.value;\n  const delay = firstDelay.value;\n  const step = delayStep.value;\n\n  if (+amount <= 0 || +delay <= 0 || +step <= 0) {\n    Notiflix.Notify.failure(`❌ All values should be greater than zero!`);\n    return;\n  }\n\n  for (let index = 0; index < amount; index++) {\n    createPromise(index + 1, +delay + +step * index)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n};\n\nform.addEventListener('submit', handleSubmit);\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$amountInput","$ce04d3a99e08e73b$var$firstDelay","$ce04d3a99e08e73b$var$delayStep","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","fulfill","reject","setTimeout","addEventListener","e","preventDefault","amount","value","delay1","step","$parcel$interopDefault","Notify","failure","index","then","param","success","concat","catch"],"version":3,"file":"03-promises.ff4f5f8a.js.map"}